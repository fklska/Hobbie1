[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://ckntlio6yppxj"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3bxke"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_mwaxq"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nqv3y"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_xpdbx"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mj2m2"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix, unshaded;

uniform sampler2D Texture2DParameter;



void fragment() {
// Input:4
	vec4 n_out4p0 = COLOR;
	float n_out4p4 = n_out4p0.a;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(Texture2DParameter, UV);
	float n_out2p4 = n_out2p0.a;


// VectorOp:6
	vec4 n_out6p0 = n_out4p0 + n_out2p0;


// FloatOp:5
	float n_out5p0 = n_out4p4 * n_out2p4;


// Output:0
	COLOR.rgb = vec3(n_out6p0.xyz);
	COLOR.a = n_out5p0;


}
"
mode = 1
flags/unshaded = true
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_3bxke")
nodes/fragment/2/position = Vector2(-520, 380)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_mwaxq")
nodes/fragment/3/position = Vector2(-960, 380)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_nqv3y")
nodes/fragment/4/position = Vector2(-660, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_xpdbx")
nodes/fragment/5/position = Vector2(-20, 320)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_mj2m2")
nodes/fragment/6/position = Vector2(-60, 80)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 2, 2, 0, 6, 1, 2, 4, 5, 1, 4, 0, 6, 0, 4, 4, 5, 0, 5, 0, 0, 1, 6, 0, 0, 0)
